---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: audiobookshelf
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: audiobookshelf
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  dependsOn:
    - name: cloudflare-tunnel
      namespace: network
  values:
    controllers:
      audiobookshelf:
        strategy: RollingUpdate
        containers:
          app:
            image:
              repository: ghcr.io/advplyr/audiobookshelf
              tag: latest
            env:
              TZ: UTC
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 10
                  periodSeconds: 10
                  timeoutSeconds: 2
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: 80
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  timeoutSeconds: 2
                  failureThreshold: 3
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 50m
                memory: 128Mi
              limits:
                memory: 1024Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
    service:
      app:
        controller: audiobookshelf
        ports:
          http:
            port: 80
            targetPort: 80
            protocol: TCP
    serviceMonitor:
      app:
        endpoints:
          - port: http
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: qnap-iscsi-xfs
        globalMounts:
          - path: /config
      metadata:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: qnap-iscsi-xfs
        globalMounts:
          - path: /metadata
      audiobooks:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: audiobookshelf-audiobooks-smb
        globalMounts:
          - path: /audiobooks
      podcasts:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: qnap-iscsi-xfs
        globalMounts:
          - path: /podcasts
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: 80
